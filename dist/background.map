{"version":3,"sources":["webpack:///webpack/bootstrap 190b35a3b37059146f20","webpack:///./src/background/centeredPopup.js","webpack:///./src/background/generator/generatorUtils.js","webpack:///./src/background/backgroundApi.js","webpack:///./src/background/generator/generator.js","webpack:///./src/background/generator/webRequests.js","webpack:///./src/background/generator/queueManager.js","webpack:///./src/background/events.js","webpack:///./src/background/index.js"],"names":["CenteredPopup","max","size","parseInt","Math","round","Promise","resolve","window","chrome","system","display","getInfo","width","height","url","type","openWindow","info","area","workArea","windows","create","focused","left","center","top","getBounds","then","catch","GeneratorUtils","filename","text","myblob","Blob","fileObjectURL","URL","createObjectURL","open","downloads","download","successUrls","length","entries","sort","map","u","replace","encodeURI","sitemap","join","lastmod","Date","now","fnameUrl","tabId","errorCallback","tabs","executeScript","file","runAt","runtime","lastError","windowId","active","headers","key","i","name","toLowerCase","value","tabArray","remove","id","domain","callback","query","test","excludedTypes","badFileExtension","indexOf","parts","split","last","filter","f","lists","page","substr","success","contains","error","complete","add","shebangHandler","generator","setupPageURI","BackgroundApi","extension","getURL","onMessage","addListener","launchRequest","browserAction","onClicked","openSetupPage","appPath","tab","windowUrl","resolveSetupPageUrl","setupWindowId","request","sender","start","config","granted","handleGrantResponse","permissions","origins","requestDomain","onStartGenerator","alert","i18n","getMessage","onCrawlComplete","initialCrawlCompleted","onCompleteCallback","contenttypePatterns","excludeExtension","successCodes","maxTabCount","terminating","targetRenderer","progressInterval","requestListener","Generator","generatorApi","bind","onComplete","navigateToNext","processDiscoveredUrls","launchPage","onError","onSuccess","onNext","onUrls","onTerminate","pending","setInterval","sendResponse","terminate","noindex","excludeFromIndex","urls","urlMessageReceived","status","crawlUrl","urlFormatter","testFileExtension","clearInterval","makeSitemap","items","closeRenderer","getExistingTabs","result","closeTabs","setTimeout","destroy","nextAction","empty","openTabs","emptyQueue","nextUrl","first","launchTab","queue","completed","successStatusCodes","validContentTypes","onMessageCallback","onNextCallback","onUrlsCallback","onErrorCallback","onSuccessCallback","WebRequestListeners","statusCodes","contentTypes","callbacks","listeners","action","modifyListener","event","filters","webRequest","types","onHeadersReceivedHandler","onBeforeRedirect","onTabLoadListener","onErrorOccurred","onTabErrorHandler","details","contentType","getHeaderValue","responseHeaders","trim","cancel","validType","statusCode","loadContentScript","redirectUrl","SimpleQueue","push","index","splice","slice","shift","QueueManager","processQueue","completedUrls","errorHeaders","BackgroundEvents","onInstalled","onInstalledEvent","reason","introUrl"],"mappings":"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","file":"190b35a3b37059146f20.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 190b35a3b37059146f20","/**\r\n* @class\r\n*/\r\nclass CenteredPopup {\r\n\r\n    /**\r\n     * @description Compute offset for element to center it within some space\r\n     * @param {Number} max max width\r\n     * @param {Number} size element width\r\n     * @return {Number}\r\n     */\r\n    static center(max, size) {\r\n        return parseInt(Math.max(0, Math.round(0.5 * (max - size))), 0);\r\n    }\r\n\r\n    /**\r\n     * @description Request viewport dimensions from chrome runtime\r\n     * @returns {Promise}\r\n     */\r\n    static getBounds() {\r\n        return new Promise(function (resolve) {\r\n            window.chrome.system.display.getInfo(resolve);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description Create centered popup window in the middle of user's monitor viewport.\r\n     * If user has multiple monitors this method launches window in the first/leftmost monitor.\r\n     * This method requires `system.display` permission in `manifest.json`\r\n     * @param {number} width - width of the new window (px)\r\n     * @param {number} height - height of the new window (px)\r\n     * @param {String} url - url to open\r\n     * @param {String} type - enum \"popup\" or \"normal\" - defaults to popup\r\n     * @returns {Promise}\r\n     */\r\n    static open(width, height, url, type) {\r\n\r\n        return new Promise(function (resolve) {\r\n            function openWindow(info) {\r\n                let area = info[0].workArea;\r\n\r\n                window.chrome.windows.create({\r\n                    url: url,\r\n                    width: width,\r\n                    height: height,\r\n                    focused: true,\r\n                    type: type,\r\n                    left: CenteredPopup.center(area.width, width),\r\n                    top: CenteredPopup.center(area.height, height)\r\n                }, resolve);\r\n            }\r\n\r\n            CenteredPopup.getBounds()\r\n                .then(openWindow)\r\n                .catch(() => {\r\n                    openWindow([{ workArea: { width: 0, height: 0 } }]);\r\n                });\r\n        });\r\n    }\r\n}\r\n\r\nexport default CenteredPopup;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/centeredPopup.js","// const downloadsPage = 'chrome://downloads';\r\n\r\n/**\r\n * @class\r\n */\r\nclass GeneratorUtils {\r\n\r\n    /**\r\n     * @description Download file\r\n     * @param {String} filename - output filename\r\n     * @param {String} text - base64 file content\r\n     */\r\n    static download(filename, text) {\r\n\r\n        let myblob = new Blob([text], {\r\n                type: 'text/xml'\r\n            }),\r\n            fileObjectURL = URL.createObjectURL(myblob);\r\n\r\n        window.open(fileObjectURL);\r\n        window.chrome.downloads.download({\r\n            url: fileObjectURL,\r\n            filename: filename\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description this function creates the sitemap and downloads it,\r\n     * then opens or activates downloads tab\r\n     */\r\n    static makeSitemap(url, successUrls) {\r\n\r\n        if (!successUrls || !successUrls.length) {\r\n            return;\r\n        }\r\n        let entries = successUrls.sort().map((u) => {\r\n            return '<url><loc>{u}</loc></url>'\r\n                .replace('{u}', encodeURI(u));\r\n        });\r\n\r\n        let sitemap = [\r\n            '<?xml version=\\'1.0\\' encoding=\\'UTF-8\\'?>',\r\n            '<urlset xmlns=\\'http://www.sitemaps.org/schemas/sitemap/0.9\\'>',\r\n            '\\r\\n',\r\n            entries.join('\\r\\n'),\r\n            '</urlset>']\r\n            .join('');\r\n\r\n        let lastmod = Date.now(),\r\n            fnameUrl = url.replace(/[\\/:.]/g, '_'),\r\n            filename = fnameUrl + '_sitemap_' + lastmod + '.xml';\r\n\r\n        GeneratorUtils.download(filename, sitemap);\r\n    }\r\n\r\n    /**\r\n     * @description Load content script in some tab\r\n     * @param {id} tabId\r\n     * @param {function} errorCallback\r\n     */\r\n    static loadContentScript(tabId, errorCallback) {\r\n        return window.chrome.tabs.executeScript(tabId, {\r\n            file: 'content.js',\r\n            runAt: 'document_end'\r\n        }, () => {\r\n            return (!window.chrome.runtime.lastError ||\r\n                errorCallback());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description Launch tab for specific url\r\n     * @param {Number} windowId - parent window\r\n     * @param {String} url\r\n     * @param {function} errorCallback - handler if this request fails\r\n     */\r\n    static launchTab(windowId, url, errorCallback) {\r\n        window.chrome.tabs.create({\r\n            url: url,\r\n            windowId: windowId,\r\n            active: false\r\n        }, () => {\r\n            if (window.chrome.runtime.lastError) {\r\n                errorCallback();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description Read headers array looking for specified key\r\n     * @param {Array<Object>} headers - http headers\r\n     * @param {String} key - header name\r\n     * @example  let contentTypeValue = getHeaderValue(headerArray, \"content-type\");\r\n     */\r\n    static getHeaderValue(headers, key) {\r\n        if (!headers || !headers.length) {\r\n            return '';\r\n        }\r\n        for (let i = 0; i < headers.length; ++i) {\r\n            if (headers[i].name.toLowerCase() === key) {\r\n                return headers[i].value;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * @description Remove tabs\r\n     * @param {Array<Object>} tabArray - chrome.tabs\r\n     */\r\n    static closeTabs(tabArray) {\r\n        if (tabArray && tabArray.length) {\r\n            for (let i = 0; i < tabArray.length; i++) {\r\n                window.chrome.tabs.remove(tabArray[i].id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Get all existing tabs based on window id\r\n     * @param {Number} windowId\r\n     * @param {String} domain - limit matches by domain\r\n     * @param {function} callback - response handler\r\n     */\r\n    static getExistingTabs(windowId, domain, callback) {\r\n        window.chrome.tabs.query({\r\n            windowId: windowId,\r\n            url: domain\r\n        }, (tabs) => {\r\n            callback(tabs || []);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description Check if url should be excluded based on its file type\r\n     * @param {String} test - uri string to test\r\n     * @param {Array<String>} excludedTypes - file types that should be excluded\r\n     */\r\n    static testFileExtension(test, excludedTypes) {\r\n\r\n        let badFileExtension = false;\r\n\r\n        if (test.indexOf('/') > -1) {\r\n            let parts = test.split('/'),\r\n                last = parts[parts.length - 1];\r\n\r\n            if (last.length) {\r\n                badFileExtension = excludedTypes.filter(function (f) {\r\n                    return (last.indexOf(f) > 0);\r\n                }).length > 0;\r\n            }\r\n        }\r\n\r\n        return badFileExtension;\r\n    }\r\n\r\n    /**\r\n     * @description Formatter for urls that contain shebang\r\n     */\r\n    static shebangHandler(u, lists) {\r\n        let page = u.substr(0, u.indexOf('#!')),\r\n            success = lists.success.contains(page),\r\n            error = lists.error.contains(page);\r\n\r\n        if (success || error) {\r\n            lists.complete.add(u);\r\n        }\r\n        if (success) {\r\n            lists.success.add(u);\r\n        }\r\n        if (error) {\r\n            lists.error.add(u);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description When urls are discovered, run them\r\n     * through this url formatter\r\n     * @param {String} u\r\n     * @param {Object} lists\r\n     * @returns {string|*}\r\n     */\r\n    static urlFormatter(u, lists) {\r\n        // make sure all urls are encoded\r\n        u = encodeURI(u);\r\n\r\n        // if SHEBANG\r\n        if (u.indexOf('#!') > 0) {\r\n            GeneratorUtils.shebangHandler(u, lists);\r\n        } else if (u.indexOf('#') > 0) {\r\n            // clear all other Hashes\r\n            u = u.substr(0, u.indexOf('#'));\r\n        }\r\n        return u;\r\n    }\r\n}\r\n\r\nexport default GeneratorUtils;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/generator/generatorUtils.js","import CenteredPopup from './centeredPopup.js';\r\nimport Generator from './generator/generator.js';\r\n\r\nlet generator;\r\nlet setupPageURI;\r\n\r\n/**\r\n * @class\r\n */\r\nclass BackgroundApi {\r\n\r\n    constructor() {\r\n        setupPageURI = window.chrome.extension.getURL('setup.html');\r\n        window.chrome.runtime.onMessage.addListener(BackgroundApi.launchRequest);\r\n        window.chrome.browserAction.onClicked.addListener(BackgroundApi.openSetupPage);\r\n    }\r\n\r\n    /**\r\n     * @description Determine what url to launch when setup page should launch\r\n     */\r\n    static resolveSetupPageUrl(url) {\r\n\r\n        let appPath = '';\r\n\r\n        if (url && url.indexOf('http') === 0) {\r\n            appPath = url;\r\n        }\r\n\r\n        return setupPageURI + '?u=' + appPath;\r\n    }\r\n\r\n    /**\r\n     * @description When user clicks extension icon, launch the session configuration page.\r\n     * Also read the url of the active tab and provide that as the default url to crawl on the setup page.\r\n     * @param {Object} tab - current active tab,\r\n     * @see {@link https://developer.chrome.com/extensions/browserAction#event-onClicked|onClicked}\r\n     */\r\n    static openSetupPage(tab) {\r\n        if (generator) {\r\n            return false;\r\n        }\r\n\r\n        let windowUrl = BackgroundApi.resolveSetupPageUrl(tab.url);\r\n\r\n        return CenteredPopup.open(600, 600, windowUrl, 'popup')\r\n            .then(BackgroundApi.setupWindowId);\r\n    }\r\n\r\n    /**\r\n     * @description Request to start new generator instance.\r\n     * This function gets called when user is ready to start new crawling session.\r\n     * At this point in time the extension will make sure the extension has been granted all necessary\r\n     * permissions, then start the generator.\r\n     * @see {@link https://developer.chrome.com/apps/runtime#event-onMessage|onMessage event}.\r\n     * @param {Object} request - message content\r\n     * @param {Object} request.start - configuration options\r\n     * @param {Object} sender - chrome runtime provided sender information\r\n     * @see {@link https://developer.chrome.com/extensions/runtime#type-MessageSender|MessageSender}\r\n     */\r\n    static launchRequest(request, sender) {\r\n        if (!request.start) {\r\n            return false;\r\n        }\r\n\r\n        let config = request.start,\r\n            callback = (granted) => BackgroundApi\r\n                .handleGrantResponse(granted, config, sender);\r\n\r\n        window.chrome.permissions.request({\r\n            permissions: ['tabs', 'downloads'],\r\n            origins: [config.requestDomain]\r\n        }, callback);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @description when permission request resolves, take action based on the output\r\n     * @param {boolean} granted - true if permission granted\r\n     * @param {Object} config - runtime settings\r\n     */\r\n    static handleGrantResponse(granted, config, sender) {\r\n        if (sender && sender.tab) {\r\n            window.chrome.tabs.remove(sender.tab.id);\r\n        }\r\n        if (granted) {\r\n            BackgroundApi.onStartGenerator(config);\r\n        } else {\r\n            window.alert(window.chrome.i18n.getMessage('permissionNotGranted'));\r\n        }\r\n        return granted;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @description When craawl session ends, clear the variable\r\n     */\r\n    static onCrawlComplete() {\r\n        generator = null;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @description Start new generator instance\r\n     * @param {Object} config - generator configuration\r\n     */\r\n    static onStartGenerator(config) {\r\n        if (generator) {\r\n            return false;\r\n        }\r\n        config.callback = BackgroundApi.onCrawlComplete;\r\n        generator = new Generator(config);\r\n        generator.start();\r\n        return generator;\r\n    }\r\n}\r\n\r\nexport default BackgroundApi;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/backgroundApi.js","import CenteredPopup from '../centeredPopup';\r\nimport GeneratorUtils from './generatorUtils';\r\nimport WebRequestListener from './webRequests';\r\nimport QueueManager from './queueManager';\r\n\r\nlet url,\r\n    requestDomain,\r\n    initialCrawlCompleted,\r\n    onCompleteCallback,\r\n    contenttypePatterns,\r\n    excludeExtension,\r\n    successCodes,\r\n    maxTabCount,\r\n    terminating,\r\n    targetRenderer,\r\n    progressInterval,\r\n    requestListener,\r\n    lists;\r\n\r\n/**\r\n * @class\r\n * @description This module crawls some website and generates a sitemap\r\n * for it. The process works as follows:\r\n *\r\n * 1. on start the generator will create a rendering window and\r\n * open a tab for the start url; then wait for http headers response.\r\n * 2. If received headers indicate success, generator will load a\r\n * crawling script in the tab that will scan the page looking for a-tag urls.\r\n * 3. The content script will send a message back to the generator with a\r\n * list of urls found on the page.\r\n * the generator will add all new urls to the queue and close the tab\r\n * 4. After the initial url has been processed new tabs will open on a\r\n * set interval to account for possible\r\n * errors and non-response until all urls in the processing queue have been checked\r\n * 5. After everything has been cheked the generator will close the window and provide\r\n * the results to the end user\r\n *\r\n * @param {Object} config - configuration options\r\n * @param {string} config.url - the website/app path we want to crawl\r\n * -- all sitemap entries will be such that they include this base url\r\n * @param {String} config.requestDomain - Chrome url match pattern for above url\r\n * @see {@link https://developer.chrome.com/apps/match_patterns|Match Patterns}\r\n * @param {Array<string>} config.contenttypePatterns - http response content\r\n * types we want to include in the sitemap\r\n * @param {Array<string>} config.excludeExtension - file extensions which should\r\n * be automatically excluded, example: `['.png','.zip']`\r\n * @param {Array<number>} config.successCodes - http response status codes which\r\n * should be regarded as successful\r\n * @param {number} config.maxTabCount - max number of tabs allowed to be open any\r\n * given time\r\n * @param {function} config.callback - *(optional)* function to call when sitemap\r\n * generation has completed\r\n */\r\nclass Generator {\r\n\r\n    constructor(config) {\r\n        url = config.url;\r\n        requestDomain = config.requestDomain;\r\n        onCompleteCallback = config.callback;\r\n        contenttypePatterns = config.contenttypePatterns || [];\r\n        excludeExtension = config.excludeExtension || [];\r\n        successCodes = config.successCodes || [];\r\n        maxTabCount = Math.max(1, config.maxTabCount);\r\n        terminating = false;\r\n        progressInterval = null;\r\n        lists = new QueueManager();\r\n\r\n        this.generatorApi = this.generatorApi.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n        this.navigateToNext = this.navigateToNext.bind(this);\r\n        this.processDiscoveredUrls = this.processDiscoveredUrls.bind(this);\r\n    }\r\n\r\n    /**\r\n     * @description Initiates crawling of some website\r\n     */\r\n    start() {\r\n        const launchPage = window.chrome.extension.getURL('process.html');\r\n        let onError = (u) => {\r\n            lists.error.add(u);\r\n        }, onSuccess = (u) => {\r\n            lists.success.add(u);\r\n        };\r\n\r\n        initialCrawlCompleted = false;\r\n        requestListener = new WebRequestListener(requestDomain,\r\n            successCodes, contenttypePatterns,\r\n            {\r\n                onMessage: this.generatorApi,\r\n                onNext: this.navigateToNext,\r\n                onUrls: this.processDiscoveredUrls,\r\n                onTerminate: this.onComplete,\r\n                onError: onError,\r\n                onSuccess: onSuccess\r\n            });\r\n\r\n        CenteredPopup.open(800, 800, launchPage, 'normal')\r\n            .then((window) => {\r\n                targetRenderer = window.id;\r\n                // 1. add the first url to processing queue\r\n                lists.pending.add(url);\r\n                // 2. navigate to first url\r\n                this.navigateToNext();\r\n                // 3. start interval that progressively works through the queue\r\n                progressInterval = setInterval(this.navigateToNext, 500);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @description Listen to messages from the browser tabs\r\n     * @see {@link https://developer.chrome.com/apps/runtime#event-onMessage|onMessage event}.\r\n     * @param request - message parameters\r\n     * @param request.terminate - stops generator\r\n     * @param request.status - gets current processing status\r\n     * @param request.urls - receive list of urls from crawler\r\n     * @param request.noindex - tells generator not to index some url, see\r\n     * @param {Object} sender -  message sender\r\n     * @param {function?} sendResponse - callback function\r\n     */\r\n    generatorApi(request, sender, sendResponse) {\r\n        if (request.terminate) {\r\n            this.onComplete();\r\n        } else if (request.noindex) {\r\n            Generator.excludeFromIndex(request.noindex);\r\n        } else if (request.urls) {\r\n            this.urlMessageReceived(request.urls, sender);\r\n        } else if (request.status) {\r\n            return sendResponse(Generator.status());\r\n        } else if (request.crawlUrl) {\r\n            return sendResponse(url);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @description When url message is received, process urls,\r\n     * then close tab that sent the message\r\n     */\r\n    urlMessageReceived(urls, sender) {\r\n        this.processDiscoveredUrls(urls);\r\n        if (sender && sender.tab) {\r\n            window.chrome.tabs.remove(sender.tab.id);\r\n        }\r\n        initialCrawlCompleted = true;\r\n    }\r\n\r\n    /**\r\n     * @description when urls are discovered through some means, this function determines\r\n     * how they should be handled\r\n     * @param {Array<String>} urls - the urls to process\r\n     */\r\n    processDiscoveredUrls(urls) {\r\n        (urls || []).map((u) => {\r\n\r\n            // format received urls\r\n            return GeneratorUtils.urlFormatter(u, lists);\r\n\r\n        }).filter(function (u) {\r\n\r\n            let test = u.replace(url, '');\r\n            let badFileExtension = GeneratorUtils\r\n                .testFileExtension(test, excludeExtension);\r\n\r\n            // filter down to new urls in target domain\r\n            // + exclude everything that is clearly not html/text\r\n            return u.indexOf(url) === 0 &&\r\n                !lists.complete.contains(u) &&\r\n                !lists.pending.contains(u) &&\r\n                !badFileExtension;\r\n\r\n        }).map((u) => {\r\n            lists.pending.add(u);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description this method will kill any ongoing\r\n     * generator and/or wrap up when processing is done\r\n     */\r\n    onComplete() {\r\n        if (terminating) {\r\n            return;\r\n        }\r\n        terminating = true;\r\n        clearInterval(progressInterval);\r\n        let sitemap = () => GeneratorUtils\r\n            .makeSitemap(url, lists.success.items);\r\n\r\n        (function closeRenderer() {\r\n            GeneratorUtils.getExistingTabs(targetRenderer, requestDomain,\r\n                (result) => {\r\n                    if (result.length) {\r\n                        GeneratorUtils.closeTabs(result);\r\n                        setTimeout(closeRenderer, 250);\r\n                    } else {\r\n                        requestListener.destroy();\r\n                        onCompleteCallback();\r\n                        window.chrome.windows.remove(\r\n                            targetRenderer, sitemap);\r\n                    }\r\n                });\r\n        }());\r\n    }\r\n\r\n    /**\r\n     * @description take first queued url and create new tab for that url\r\n     */\r\n    navigateToNext() {\r\n        if (terminating) {\r\n            return;\r\n        }\r\n\r\n        GeneratorUtils.getExistingTabs(\r\n            targetRenderer, requestDomain, (tabs) => {\r\n                Generator.nextAction(!!tabs.length,\r\n                    lists.pending.empty, this.onComplete);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @description Determine if it is time to launch new tab, terminate, or wait\r\n     * @param {boolean} openTabs - number of open tabs\r\n     * @param {boolean} emptyQueue - true if no pending urls\r\n     */\r\n    static nextAction(openTabs, emptyQueue, onComplete) {\r\n        if (!openTabs && emptyQueue && initialCrawlCompleted) {\r\n            onComplete();\r\n        }\r\n        if (emptyQueue || openTabs > maxTabCount) {\r\n            return;\r\n        }\r\n\r\n        let nextUrl = lists.pending.first;\r\n\r\n        if (!lists.complete.contains(nextUrl)) {\r\n            lists.complete.add(nextUrl);\r\n            GeneratorUtils.launchTab(targetRenderer, nextUrl,\r\n                onComplete);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Get stats about ongoing processing status\r\n     */\r\n    static status() {\r\n        return {\r\n            url: url,\r\n            queue: lists.pending.length,\r\n            completed: lists.complete.length,\r\n            success: lists.success.length,\r\n            error: lists.error.length\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @description Exclude discovered url from sitemap\r\n     * @param {String} url - the url that should not be included in the sitemap\r\n     */\r\n    static excludeFromIndex(url) {\r\n        url = encodeURI(url);\r\n        lists.complete.add(url);\r\n        lists.success.remove(url);\r\n    }\r\n}\r\n\r\nexport default Generator;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/generator/generator.js","import GeneratorUtils from './generatorUtils';\r\n\r\nlet successStatusCodes,\r\n    validContentTypes,\r\n    requestDomain,\r\n    onMessageCallback,\r\n    onNextCallback,\r\n    onUrlsCallback,\r\n    onErrorCallback,\r\n    onSuccessCallback,\r\n    onTerminate;\r\n\r\n/**\r\n * @class\r\n * @description creating this class will attach webrequest listerers to runtime\r\n * allowing monitoring http request and tab load state.\r\n * Once all processing is done call `destroy()` method to detact the listeners.\r\n * @param {String} requestDomain - base url to monitor\r\n * @param {Array<Number>} successCodes - list of http status codes that are considered successsful\r\n * @param {Array<String>} contenttypePatterns - list of content types that should be crawled;\r\n * when content type is detected that falls outside this list, the tab will immediately close\r\n * @param {Object} callbacks - callback functions to handle various events\r\n * @param {function} callbacks.onMessage - when chrome.runtime.onMessage occurs\r\n * @param {function} callback.onNext - when next url should launch\r\n * @param {function} callback.onUrls - when some url has been discovered\r\n * @param {function} callback.onTerminate - when contentScript fails to load we should terminate\r\n * @param {function} callback.onError - handler when some individual url returns error response\r\n * @param {function} callback.onUrlError - handler when some individual url returns success response\r\n */\r\nclass WebRequestListeners {\r\n\r\n    constructor(domain, statusCodes, contentTypes, callbacks) {\r\n        requestDomain = domain;\r\n        successStatusCodes = statusCodes;\r\n        validContentTypes = contentTypes;\r\n        onMessageCallback = callbacks.onMessage;\r\n        onNextCallback = callbacks.onNext;\r\n        onUrlsCallback = callbacks.onUrls;\r\n        onErrorCallback = callbacks.onError;\r\n        onSuccessCallback = callbacks.onSuccess;\r\n        onTerminate = callbacks.onTerminate;\r\n        this.listeners(true);\r\n    }\r\n\r\n    /**\r\n     * @description remove all requestListeners\r\n     */\r\n    destroy() {\r\n        this.listeners(false);\r\n    }\r\n\r\n    /**\r\n     * @description Add or remove runtime event handlers\r\n     * @param {boolean} add - true to add, false to remove\r\n     */\r\n    listeners(add) {\r\n\r\n        let action = add ? 'addListener' : 'removeListener';\r\n\r\n        let modifyListener = (event, callback, filters) => {\r\n            window.chrome.webRequest[event][action](callback,\r\n                { urls: [requestDomain], types: ['main_frame'] }, filters);\r\n        };\r\n\r\n        window.chrome.runtime.onMessage[action](onMessageCallback);\r\n        modifyListener('onHeadersReceived',\r\n            WebRequestListeners.onHeadersReceivedHandler, ['blocking', 'responseHeaders']);\r\n        modifyListener('onBeforeRedirect',\r\n            WebRequestListeners.onBeforeRedirect, ['responseHeaders']);\r\n        modifyListener('onCompleted',\r\n            WebRequestListeners.onTabLoadListener, ['responseHeaders']);\r\n\r\n        window.chrome.webRequest.onErrorOccurred[action](\r\n            WebRequestListeners.onTabErrorHandler,\r\n            { urls: [requestDomain], types: ['main_frame'] });\r\n    }\r\n\r\n    /**\r\n     * @description listen to headers to determine type and cancel\r\n     * and close tab immediately if the detected content type is not\r\n     * on the list of target types\r\n     * @param {Object} details - provided by Chrome\r\n     * @see {@link https://developer.chrome.com/extensions/webRequest#event-onHeadersReceived | onHeadersReceived}\r\n     */\r\n    static onHeadersReceivedHandler(details) {\r\n\r\n        let contentType = GeneratorUtils.getHeaderValue(\r\n            details.responseHeaders, 'content-type');\r\n\r\n        contentType = contentType\r\n            .split(';')[0].trim().toLowerCase();\r\n\r\n        let cancel = false,\r\n            validType = validContentTypes\r\n                .indexOf(contentType) >= 0;\r\n\r\n        if (!validType) {\r\n            window.chrome.tabs.remove(details.tabId);\r\n            cancel = true;\r\n        }\r\n\r\n        return { cancel: cancel };\r\n    }\r\n\r\n    /**\r\n     * @description Listen to incoming webrequest headers\r\n     * @param {Object} details - provided by chrome\r\n     * @see {@link https://developer.chrome.com/extensions/webRequest#event-onCompleted | OnComplete}\r\n     */\r\n    static onTabLoadListener(details) {\r\n        if (successStatusCodes.indexOf(details.statusCode) < 0) {\r\n            onErrorCallback(details.url);\r\n            WebRequestListeners.onTabErrorHandler(details);\r\n        } else {\r\n            onSuccessCallback(details.url);\r\n            GeneratorUtils.loadContentScript(details.tabId, onTerminate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description whenever request causes redirect, put the\r\n     * new url in queue and terminate current request\r\n     */\r\n    static onBeforeRedirect(details) {\r\n        onUrlsCallback([details.redirectUrl]);\r\n        window.chrome.tabs.remove(details.tabId);\r\n        return { cancel: true };\r\n    }\r\n\r\n    /**\r\n     * @description if tab errors, close it and load next one\r\n     */\r\n    static onTabErrorHandler(details) {\r\n        window.chrome.tabs.remove(details.tabId, onNextCallback);\r\n    }\r\n}\r\n\r\nexport default WebRequestListeners;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/generator/webRequests.js","class SimpleQueue {\r\n\r\n    constructor() {\r\n        this.queue = [];\r\n    }\r\n\r\n    get length() {\r\n        return this.queue.length;\r\n    }\r\n\r\n    get empty() {\r\n        return this.queue.length === 0;\r\n    }\r\n\r\n    get items() {\r\n        return this.queue.slice();\r\n    }\r\n\r\n    get first() {\r\n        return this.queue.shift();\r\n    }\r\n\r\n    /**\r\n     * @description Check if queue contains some item\r\n     * @param {String} url\r\n     * @returns {boolean}\r\n     */\r\n    contains(url) {\r\n        return this.queue.indexOf(url) >= 0;\r\n    }\r\n\r\n    /**\r\n     * @description Add item to queue\r\n     * @param {String} url\r\n     */\r\n    add(url) {\r\n        if (this.queue.indexOf(url) < 0) {\r\n            this.queue.push(url);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @description Remove item from queue\r\n     * @param {String} url\r\n     */\r\n    remove(url) {\r\n        let index = this.queue.indexOf(url);\r\n\r\n        if (index >= 0) {\r\n            this.queue.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nclass QueueManager {\r\n\r\n    constructor() {\r\n        this.processQueue = new SimpleQueue();\r\n        this.completedUrls = new SimpleQueue();\r\n        this.errorHeaders = new SimpleQueue();\r\n        this.successUrls = new SimpleQueue();\r\n    }\r\n\r\n    get success() {\r\n        return this.successUrls;\r\n    }\r\n\r\n    get pending() {\r\n        return this.processQueue;\r\n    }\r\n\r\n    get error() {\r\n        return this.errorHeaders;\r\n    }\r\n\r\n    get complete() {\r\n        return this.completedUrls;\r\n    }\r\n}\r\n\r\nexport default QueueManager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/generator/queueManager.js","/**\r\n * @class\r\n * @description Listens and responds to interesting Chrome runtime events\r\n */\r\nclass BackgroundEvents {\r\n\r\n    constructor() {\r\n        window.chrome.runtime.onInstalled.addListener(\r\n            BackgroundEvents.onInstalledEvent);\r\n    }\r\n\r\n    /**\r\n     * @description When user first installs extension,\r\n     * launch Google image search page\r\n     * @param {Object} details - @see {@link https://developer.chrome.com/apps/runtime#event-onInstalled|OnIstalled}\r\n     */\r\n    static onInstalledEvent(details) {\r\n        if (details.reason === 'install') {\r\n            let introUrl = window.chrome.runtime.getURL('intro.html');\r\n\r\n            window.chrome.tabs.create({ url: introUrl });\r\n        }\r\n    }\r\n}\r\n\r\nexport default BackgroundEvents;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/events.js","import BackgroundApi from './backgroundApi';\r\nimport BackgroundEvents from './events';\r\n\r\n(() => new BackgroundApi())();\r\n(() => new BackgroundEvents())();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/index.js"],"sourceRoot":""}