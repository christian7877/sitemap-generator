{"version":3,"sources":["webpack:///webpack/bootstrap 97fab7014f9aa8035f86","webpack:///./src/ui/process.js"],"names":["Process","document","getElementById","onclick","e","window","chrome","runtime","sendMessage","terminate","target","innerText","i","setTimeout","checkStatus","setInterval","ga","status","handleStatusResponse","response","k","elem"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7DA;;;;IAIMA,O;AAEF,uBAAc;AAAA;;AAEV;AACAC,iBAASC,cAAT,CAAwB,OAAxB,EAAiCC,OAAjC,GAA2C,UAACC,CAAD,EAAO;AAC9CC,mBAAOC,MAAP,CAAcC,OAAd,CAAsBC,WAAtB,CAAkC,EAACC,WAAW,IAAZ,EAAlC;AACAL,cAAEM,MAAF,CAASC,SAAT,GAAqB,iBAArB;AACH,SAHD;;AAKA;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AACzBC,uBAAWb,QAAQc,WAAnB,EAAgCF,IAAI,IAApC;AACH;;AAED;AACAG,oBAAYf,QAAQc,WAApB,EAAiC,KAAjC;;AAEAT,eAAOW,EAAP,CAAU,MAAV,EAAkB,OAAlB,EAA2B,mBAA3B,EAAgD,QAAhD,EAA0D,IAA1D,EAAgE,CAAhE;AACH;;AAED;;;;;;;sCAGqB;AACjBX,mBAAOC,MAAP,CAAcC,OAAd,CAAsBC,WAAtB,CAAkC,EAACS,QAAQ,IAAT,EAAlC,EAAkDjB,QAAQkB,oBAA1D;AACH;;AAED;;;;;;;6CAI4BC,Q,EAAU;AAClC,iBAAK,IAAIC,CAAT,IAAcD,QAAd,EAAwB;AACpB,oBAAIE,OAAOpB,SAASC,cAAT,CAAwBkB,CAAxB,CAAX;;AAEA,oBAAIC,IAAJ,EAAUA,KAAKV,SAAL,GAAiBQ,SAASC,CAAT,CAAjB;AACb;AACJ;;;;;;AAGL,CAAC;AAAA,WAAM,IAAIpB,OAAJ,EAAN;AAAA,CAAD;;kBAEeA,O","file":"97fab7014f9aa8035f86.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 97fab7014f9aa8035f86","/**\r\n * @class\r\n * @description This module is used to communicate with the generator while crawling is ongoing.\r\n */\r\nclass Process {\r\n\r\n    constructor() {\r\n\r\n        // bind event handlers\r\n        document.getElementById('close').onclick = (e) => {\r\n            window.chrome.runtime.sendMessage({terminate: true});\r\n            e.target.innerText = 'Terminating....';\r\n        };\r\n\r\n        // initially check status every 1 second\r\n        for (let i = 0; i < 10; i++) {\r\n            setTimeout(Process.checkStatus, i * 1000);\r\n        }\r\n\r\n        // after first 10x increase the interval\r\n        setInterval(Process.checkStatus, 10000);\r\n\r\n        window.ga('send', 'event', 'sitemap-generator', 'runner', null, 1);\r\n    }\r\n\r\n    /**\r\n     * @description Request information about current processing status from the background\r\n     */\r\n    static checkStatus() {\r\n        window.chrome.runtime.sendMessage({status: true}, Process.handleStatusResponse);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * @description When status response is received, update the UI to reflect the information\r\n     */\r\n    static handleStatusResponse(response) {\r\n        for (let k in response) {\r\n            let elem = document.getElementById(k);\r\n\r\n            if (elem) elem.innerText = response[k];\r\n        }\r\n    }\r\n}\r\n\r\n(() => new Process())();\r\n\r\nexport default Process;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/process.js"],"sourceRoot":""}